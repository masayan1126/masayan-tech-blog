---
import buildPaginationItem from "@/features/Pagination/buildPaginationItem";
type Props = {
  page: {
    currentPage: number;
    lastPage: number;
    size: number;
    total: number;
    url: { current: string; next?: string; prev?: string };
  };
};

const { page } = Astro.props;
const { categoryId } = Astro.params;

const pagination = buildPaginationItem(page.total, page.size, page.currentPage);
---

<ul class="pagination">
  {
    page.url.prev && (
      <li class="pagination-item">
        <a class="pagination-item-link" href={page.url.prev}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="pagination-item-link-icon"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              stroke-linecap="round"
              stroke-inejoin="round"
              d="M11 19l-7-7 7-7m8 14l-7-7 7-7"
            />
          </svg>
        </a>
      </li>
    )
  }

  {
    // カテゴリーの記事一覧ページの場合はカテゴリーIDを付与、通常の記事一覧の場合は付与しない
    page.url.current.includes("category")
      ? pagination.map(
          (item) =>
            item !== "" && (
              <li class="pagination-item">
                <a
                  class={`pagination-item-link ${
                    page.currentPage === Number(item) ? "isActive" : ""
                  }`}
                  href={`/category/${categoryId}/${item}`}
                >
                  <span>{item}</span>
                </a>
              </li>
            )
        )
      : pagination.map(
          (item) =>
            item !== "" && (
              <li class="pagination-item">
                <a
                  class={`pagination-item-link ${
                    page.currentPage === Number(item) ? "isActive" : ""
                  }`}
                  href={Number(item) === 1 ? `/blogs` : `/blogs/${item}`}
                >
                  <span>{item}</span>
                </a>
              </li>
            )
        )
  }

  {
    page.url.next && (
      <li class="pagination-item">
        <a class="pagination-item-link" href={page.url.next}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="pagination-item-link-icon"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              stroke-linecap="round"
              stroke-inejoin="round"
              d="M13 5l7 7-7 7M5 5l7 7-7 7"
            />
          </svg>
        </a>
      </li>
    )
  }
</ul>

<style>
  .pagination {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto;
  }
  .pagination-item-link {
    @apply w-7 h-7 sm:w-9 sm:h-9 lg:w-11 lg:h-11 text-xs sm:text-sm;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    overflow: hidden;
    background: var(--text-color);
    border: solid 2px var(--bg-color-thick);
    color: var(--bg-color-thick);
    font-weight: bold;
    transition: all 0.15s linear;
  }
  .pagination-item-link-icon {
    @apply w-3 h-3 sm:w-5 sm:h-5;
  }
  .pagination-item-link.isActive {
    background: var(--bg-color-thick);
    color: var(--text-color);
    pointer-events: none;
  }
  .pagination-item-link:not(.isActive):hover {
    background: var(--bg-color-thick);
    color: var(--text-color);
  }
  .pagination > * + * {
    margin-left: 8px;
  }
</style>
