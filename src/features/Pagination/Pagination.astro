---
type Props = {
  page: {
    currentPage: number;
    lastPage: number;
    size: number;
    total: number;
    url: { current: string; next?: string; prev?: string };
  };
};

const { page } = Astro.props;
---

<ul class="Pagination">
  {
    page.url.prev && (
      <li class="Pagination-Item">
        <a class="Pagination-Item-Link" href={page.url.prev}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="Pagination-Item-Link-Icon"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              stroke-linecap="round"
              stroke-inejoin="round"
              d="M11 19l-7-7 7-7m8 14l-7-7 7-7"
            />
          </svg>
        </a>
      </li>
    )
  }

  {
    [...Array(Math.ceil(page.total / page.size))]
      .map((_, i) => i + 1)
      .map((_num) => (
        <li class="Pagination-Item">
          <a
            class={`Pagination-Item-Link ${
              page.currentPage === _num ? "isActive" : ""
            }`}
            href={_num === 1 ? `/blogs` : `/blogs/${_num}`}
          >
            <span>{_num}</span>
          </a>
        </li>
      ))
  }

  {
    page.url.next && (
      <li class="Pagination-Item">
        <a class="Pagination-Item-Link" href={page.url.next}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="Pagination-Item-Link-Icon"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              stroke-linecap="round"
              stroke-inejoin="round"
              d="M13 5l7 7-7 7M5 5l7 7-7 7"
            />
          </svg>
        </a>
      </li>
    )
  }
</ul>

<style>
  .Pagination {
    display: flex;
    align-items: center;
    margin: 0 auto;
    max-width: 310px;
    overflow: hidden;
  }
  .Pagination-Item-Link {
    width: 45px;
    height: 45px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    overflow: hidden;
    background: var(--text-color);
    border: solid 2px var(--bg-color-thick);
    font-size: 14px;
    color: var(--bg-color-thick);
    font-weight: bold;
    transition: all 0.15s linear;
  }
  .Pagination-Item-Link-Icon {
    width: 20px;
  }
  .Pagination-Item-Link.isActive {
    background: var(--bg-color-thick);
    color: var(--text-color);
    pointer-events: none;
  }
  .Pagination-Item-Link:not(.isActive):hover {
    background: var(--bg-color-thick);
    color: var(--text-color);
  }
  .Pagination > * + * {
    margin-left: 8px;
  }
</style>
